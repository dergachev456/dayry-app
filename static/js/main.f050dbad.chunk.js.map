{"version":3,"sources":["components/AsideSection/AsideSection.jsx","functions.js","components/CustomForm/CustomForm.jsx","components/ItemList/ItemList.jsx","store/actions/mainActionCreator.js","store/constants.js","components/ItemList/ItemListContainer.jsx","store/actions/itemsActionCreator.js","components/Items/Items.jsx","components/Items/ItemsContainer.jsx","components/Comments/Comments.js","components/Comments/CommentsContainer.js","components/Portal.js","components/MyColorPicker/MyColorPicker.js","components/MainSection/MainSection.jsx","App.js","store/reducers/items.js","store/reducers/main.js","store/reducers/index.js","store/store.js","index.js"],"names":["AsideSection","className","getRandonId","Math","random","toString","substring","CustomForm","props","state","text","create","onClick","setState","myRef","current","focus","onChangeText","e","target","value","handleKeyPress","key","React","createRef","this","ref","onKeyPress","onChange","placeholder","type","Component","ItemList","items","deleteItem","selectedItemIndex","setSelectedItemIndex","map","item","index","id","name","comments","length","showColorPicker","ItemListContainer","main","filter","connect","payload","Items","onClickFormButton","ItemsContainer","createItem","Comments","selectedItem","color","undefined","comment","style","backgroundColor","CommentsContainer","getSelectedItem","createComment","console","log","selectedColor","item_id","Portal","el","document","createElement","body","appendChild","removeChild","children","ReactDOM","createPortal","MyColorPicker","background","handleChangeComplete","hex","accept","setSelectedColor","hideColorPicker","isColorPicker","onChangeComplete","onAccept","onCancel","MainSection","App","ITEMS","load","namespace","newComment","initialState","rootReducer","combineReducers","action","middleware","save","store","createStore","compose","applyMiddleware","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f050dbad.chunk.js","sourcesContent":["import React from 'react'\r\nimport './AsideSection.scss'\r\nexport default function AsideSection() {\r\n    return (\r\n        <aside className=\"aside\">\r\n            <h1 className=\"aside__title\">dayry app</h1>\r\n            <span className=\"aside__text\">Comment whit no sence</span>\r\n        </aside>\r\n    )\r\n}\r\n","export function getRandonId() {\r\n    return Math.random().toString(36).substring(2, 8) + Math.random().toString(36).substring(2, 8);\r\n}","import React, { Component } from 'react'\r\nimport './CustomForm.scss'\r\nimport {getRandonId} from '../../functions.js'\r\n\r\nexport default class CustomForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n    }\r\n    state = {\r\n        text: \"\"\r\n    }\r\n    create = () => {\r\n        const { onClick } = this.props;\r\n        const { text } = this.state;\r\n        if (text !== \"\") {\r\n            const id = getRandonId();\r\n            onClick(id, text);\r\n            this.setState({ text: \"\" });\r\n            this.myRef.current.focus();\r\n        }\r\n    }\r\n    onChangeText = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n    handleKeyPress = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.create();\r\n        }\r\n    }\r\n    render() {\r\n        const { text } = this.state;\r\n        return (\r\n            <div className=\"custom-form\">\r\n                <input\r\n                    ref={this.myRef}\r\n                    onKeyPress={this.handleKeyPress}\r\n                    onChange={this.onChangeText}\r\n                    value={text}\r\n                    placeholder=\"Type name here...\"\r\n                    className=\"custom-form__input\"\r\n                    type=\"text\"\r\n                />\r\n                <button onClick={this.create} className=\"custom-form__button\">Add new</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport \"./ItemList.scss\"\r\nexport default function ItemList(props) {\r\n    const { items, deleteItem, selectedItemIndex, setSelectedItemIndex } = props;\r\n    return (\r\n        <div className=\"item-list\">\r\n            {\r\n                items && items.map((item, index) => {\r\n                    return (\r\n                        <div onClick={() => setSelectedItemIndex(index)} key={item.id} className={selectedItemIndex === index ? \"item active\" : \"item\"}>\r\n                            <span className=\"item__name\">{item.name}</span>\r\n                            <div className=\"item__count-container\">\r\n                                <span className=\"item__count\">{item.comments.length}</span>\r\n                            </div>\r\n                            <button onClick={() => deleteItem(item.id)} className=\"item__button\">Delete</button>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import {\r\n    SET_SELECTED_ITEM, SET_SELECTED_COLOR, SHOW_COLOR_PICKER, HIDE_COLOR_PICKER\r\n} from '../constants';\r\n\r\nexport const setSelectedItemIndex = (index) => ({\r\n    type: SET_SELECTED_ITEM,\r\n    payload: index,\r\n}); \r\n\r\nexport const setSelectedColor = (color) => ({\r\n    type: SET_SELECTED_COLOR,\r\n    payload: color\r\n});\r\n\r\nexport const showColorPicker = () => ({\r\n    type: SHOW_COLOR_PICKER\r\n});\r\n\r\nexport const hideColorPicker = () => ({\r\n    type: HIDE_COLOR_PICKER\r\n});\r\n\r\n","export const CREATE_ITEM = 'CREATE_ITEM';\r\n\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\n\r\nexport const SET_SELECTED_ITEM = 'SET_SELECTED_ITEM';\r\n\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\r\n\r\nexport const SET_SELECTED_COLOR = 'SET_SELECTED_COLOR';\r\n\r\nexport const SHOW_COLOR_PICKER = 'SHOW_COLOR_PICKER';\r\n\r\nexport const HIDE_COLOR_PICKER = 'HIDE_COLOR_PICKER';\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ItemList from './ItemList'\r\nimport { connect } from 'react-redux';\r\nimport { deleteItem } from '../../store/actions/itemsActionCreator';\r\nimport { setSelectedItemIndex } from '../../store/actions/mainActionCreator';\r\n\r\n\r\nclass ItemListContainer extends Component {\r\n\r\n    componentDidUpdate() {\r\n        const { items, main, setSelectedItemIndex } = this.props;\r\n        const selectedItem = items.filter((item, index) => main.selectedItemIndex === index);\r\n        if (selectedItem.length === 0 && items.length !== 0) {\r\n            setSelectedItemIndex(items.length - 1);\r\n        }\r\n    }\r\n    deleteItem = (id) => {\r\n        const { deleteItem } = this.props;\r\n        deleteItem(id);\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { items, main, setSelectedItemIndex } = this.props;\r\n        return (\r\n            <ItemList\r\n                items={items}\r\n                deleteItem={this.deleteItem}\r\n                selectedItemIndex={main.selectedItemIndex}\r\n                setSelectedItemIndex={setSelectedItemIndex}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default connect((state) => ({\r\n    items: state.items,\r\n    main: state.main\r\n}), {\r\n    deleteItem, setSelectedItemIndex\r\n})(ItemListContainer);","import {\r\n    CREATE_ITEM, DELETE_ITEM, CREATE_COMMENT\r\n} from '../constants';\r\n\r\nexport const createItem = (id, name) => ({\r\n    type: CREATE_ITEM,\r\n    id,\r\n    name,\r\n}); \r\n\r\nexport const deleteItem = (id) => ({\r\n    type: DELETE_ITEM,\r\n    id,\r\n});\r\n\r\n\r\nexport const createComment = (item_id, id, name, color) => ({\r\n    type: CREATE_COMMENT,\r\n    item_id,\r\n    id,\r\n    name,\r\n    color\r\n});","import React from 'react'\r\nimport CustomForm from '../CustomForm/CustomForm'\r\nimport './Items.scss';\r\nimport ItemListContainer from '../ItemList/ItemListContainer';\r\nexport default function Items(props) {\r\n    const {onClickFormButton} = props;\r\n    return (\r\n        <div className=\"items\">\r\n            <h2 className=\"items__title\">Items</h2>\r\n            <CustomForm onClick={onClickFormButton} />\r\n            <ItemListContainer />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Items from './Items'\r\nimport { connect } from 'react-redux';\r\nimport { createItem } from '../../store/actions/itemsActionCreator';\r\nclass ItemsContainer extends Component {\r\n    render() {\r\n        const {createItem} = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Items onClickFormButton={createItem} />\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default connect(() => ({}), {\r\n    createItem\r\n})(ItemsContainer);","import React from 'react'\r\nimport \"./Comments.scss\"\r\nexport default function Comments(props) {\r\n    const { selectedItem, onClick, showColorPicker, text, onChangeText, color } = props;\r\n    return (\r\n        <div className=\"comments\">\r\n            <span className=\"comments__title\">Comments #</span>\r\n            {\r\n                selectedItem !== undefined && <span className=\"comments__title\">{selectedItem.id}</span>\r\n            }\r\n            {\r\n                selectedItem && selectedItem.comments && (\r\n                    selectedItem.comments.map(comment => {\r\n                        return (\r\n                            <div key={comment.id} className=\"comment\">\r\n                                <div style={{backgroundColor: comment.color}} className=\"comment__color\" />\r\n                                <span className=\"comment__text\">{comment.name}</span>\r\n                            </div>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n            <div className=\"comments__form-wrapper\">\r\n                <div onClick={showColorPicker} className=\"comments__square-container\">\r\n                    <div style={{ backgroundColor: color }} className=\"comments__square\" />\r\n                </div>\r\n                <textarea\r\n                    value={text}\r\n                    placeholder=\"Type comment here...\"\r\n                    className=\"comments__textarea\"\r\n                    name=\"comments\"\r\n                    onChange={onChangeText}\r\n                />\r\n                <button onClick={onClick} className=\"comments__button\">Add new</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Comments from './Comments'\r\nimport { connect } from 'react-redux';\r\nimport { createComment } from '../../store/actions/itemsActionCreator';\r\nimport { showColorPicker } from '../../store/actions/mainActionCreator';\r\nimport {getRandonId} from '../../functions.js'\r\n\r\nclass CommentsContainer extends Component {\r\n    state = {\r\n        text: \"\"\r\n    }\r\n\r\n    onChangeText = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    getSelectedItem = () => {\r\n        const { items, main } = this.props;\r\n        const selectedItemIndex = main.selectedItemIndex;\r\n        const selectedItem = items.filter((item, index) => index === selectedItemIndex);\r\n        return selectedItem[0];\r\n    }\r\n\r\n    createComment = () => {\r\n        const { createComment, main, items } = this.props;\r\n        const { text } = this.state;\r\n        console.log(items.length);\r\n        \r\n        if (text !== \"\" && items.length !== 0) {\r\n            const selectedItem = this.getSelectedItem();\r\n            const id = getRandonId();\r\n            createComment(selectedItem.id, id, text, main.selectedColor);\r\n            this.setState({ text: \"\" })\r\n        }\r\n    }\r\n    render() {\r\n        const selectedItem = this.getSelectedItem();\r\n        const { showColorPicker, main } = this.props;\r\n        const { text } = this.state;\r\n        return (\r\n            <Comments\r\n                selectedItem={selectedItem}\r\n                onClick={this.createComment}\r\n                showColorPicker={showColorPicker}\r\n                text={text}\r\n                onChangeText={this.onChangeText}\r\n                color={main.selectedColor}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect((state) => ({\r\n    items: state.items,\r\n    main: state.main\r\n}), { createComment, showColorPicker })(CommentsContainer);\r\n","import  { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nexport default class Portal extends Component {\r\n    el = document.createElement('div');\r\n\r\n    componentDidMount() {\r\n        document.body.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        return (\r\n            ReactDOM.createPortal(children, this.el)\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { PhotoshopPicker } from 'react-color';\r\nimport './MyColorPicker.scss'\r\nimport { connect } from 'react-redux';\r\nimport { setSelectedColor, showColorPicker, hideColorPicker } from '../../store/actions/mainActionCreator';\r\nimport Portal from '../Portal';\r\nclass MyColorPicker extends React.Component {\r\n    state = {\r\n        background: '#000',\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex });\r\n    };\r\n\r\n    accept = () => {\r\n        const { setSelectedColor, hideColorPicker } = this.props;\r\n        const { background } = this.state;\r\n        setSelectedColor(background);\r\n        hideColorPicker();\r\n    }\r\n\r\n    render() {\r\n        const { hideColorPicker, main } = this.props;\r\n\r\n        return (\r\n            <Portal>\r\n                <div className={main.isColorPicker ? \"my-color-picker visible\" : \"my-color-picker hidden\"}>\r\n                    <PhotoshopPicker\r\n                        className=\"my-picker\"\r\n                        color={this.state.background}\r\n                        onChangeComplete={this.handleChangeComplete}\r\n                        onAccept={this.accept}\r\n                        onCancel={hideColorPicker}\r\n                    />\r\n                </div>\r\n            </Portal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    main: state.main\r\n}), {\r\n    setSelectedColor, showColorPicker, hideColorPicker\r\n})(MyColorPicker);","import React from 'react'\r\nimport './MainSection.scss'\r\nimport ItemsContainer from '../Items/ItemsContainer'\r\nimport CommentsContainer from '../Comments/CommentsContainer'\r\nimport MyColorPicker from '../MyColorPicker/MyColorPicker'\r\nexport default function MainSection() {\r\n    return (\r\n        <section className=\"main\">\r\n            <ItemsContainer />\r\n            <CommentsContainer />\r\n            <MyColorPicker />\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport AsideSection from './components/AsideSection/AsideSection';\nimport MainSection from './components/MainSection/MainSection';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <AsideSection />\n        <MainSection />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n    CREATE_ITEM,\r\n    DELETE_ITEM,\r\n    CREATE_COMMENT,\r\n\r\n} from '../constants';\r\nimport {\r\n    load\r\n} from 'redux-localstorage-simple';\r\n\r\nlet ITEMS = load({\r\n    namespace: 'todo'\r\n});\r\n\r\nif (!ITEMS || !ITEMS.items || !ITEMS.items.length) {\r\n    ITEMS = {\r\n        items: [],\r\n    }\r\n}\r\n\r\nconst items = (state = ITEMS.items, {\r\n    id,\r\n    name,\r\n    type,\r\n    color,\r\n    item_id\r\n\r\n}) => {\r\n    switch (type) {\r\n        case CREATE_ITEM:\r\n            return [\r\n                ...state, {\r\n                    id,\r\n                    name,\r\n                    comments: [],\r\n                }\r\n            ];\r\n        case DELETE_ITEM:\r\n            return [...state].filter((item) =>\r\n                item.id !== id\r\n            );\r\n\r\n        case CREATE_COMMENT:\r\n            const newComment = {\r\n                id,\r\n                name,\r\n                color\r\n            }\r\n            return [...state].map(item => {\r\n                if (item.id === item_id) {\r\n                    item.comments = [newComment, ...item.comments];\r\n                }\r\n                return item;\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default items;","import { SET_SELECTED_ITEM, SET_SELECTED_COLOR, SHOW_COLOR_PICKER, HIDE_COLOR_PICKER } from '../constants';\r\n\r\nconst initialState = {\r\n    selectedItemIndex: 0,\r\n    selectedColor: \"#000\",\r\n    isColorPicker: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_SELECTED_ITEM:\r\n            return {\r\n                ...state,\r\n                selectedItemIndex: action.payload\r\n            }\r\n        case SET_SELECTED_COLOR:\r\n            return {\r\n                ...state,\r\n                selectedColor: action.payload\r\n            }\r\n        case SHOW_COLOR_PICKER:\r\n            return {\r\n                ...state,\r\n                isColorPicker: true\r\n            }\r\n        case HIDE_COLOR_PICKER:\r\n            return {\r\n                ...state,\r\n                isColorPicker: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport items from './items';\r\nimport main from './main';\r\n\r\n\r\nconst rootReducer = combineReducers({items, main});\r\n\r\n\r\nexport default rootReducer;","\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { save } from 'redux-localstorage-simple';\r\n\r\nconst middleware = [save({ namespace: 'todo'})];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}