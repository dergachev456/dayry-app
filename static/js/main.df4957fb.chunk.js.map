{"version":3,"sources":["components/AsideSection/AsideSection.jsx","components/ItemList/ItemList.jsx","store/actions/mainActionCreator.js","store/constants.js","components/ItemList/ItemListContainer.jsx","store/actions/itemsActionCreator.js","components/CustomButton/CustomButton.jsx","components/CustomInput/CustomInput.jsx","components/Items/Items.jsx","functions.js","components/Items/ItemsContainer.jsx","components/CommentList/CommentList.jsx","components/Comments/Comments.js","components/Comments/CommentsContainer.js","components/Portal.js","components/MyColorPicker/MyColorPicker.js","components/MainSection/MainSection.jsx","App.js","store/reducers/items.js","store/reducers/main.js","store/reducers/index.js","store/store.js","index.js"],"names":["AsideSection","className","ItemList","props","items","deleteItem","selectedItemIndex","setSelectedItemIndex","map","item","index","onClick","key","id","name","comments","length","showColorPicker","type","ItemListContainer","this","main","filter","Component","connect","state","payload","CustomButton","children","CustomInput","placeholder","onChange","value","onKeyPress","e","Items","onClickFormButton","inputValue","onChangeInput","getRandonId","Math","random","toString","substring","ItemsContainer","create","createItem","handleItemText","itemText","onChangeItemText","target","CommentList","selectedItem","comment","style","backgroundColor","color","Comments","onChangeText","undefined","CommentsContainer","handleCommentText","getSelectedItem","createComment","commentText","selectedColor","item_id","Portal","el","document","createElement","body","appendChild","removeChild","ReactDOM","createPortal","MyColorPicker","background","handleChangeComplete","setState","hex","accept","setSelectedColor","hideColorPicker","isColorPicker","onChangeComplete","onAccept","onCancel","React","MainSection","App","ITEMS","load","namespace","newComment","initialState","rootReducer","combineReducers","action","middleware","save","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","render","StrictMode","getElementById"],"mappings":"gZAEe,SAASA,IACpB,OACI,2BAAOC,UAAU,SACb,wBAAIA,UAAU,gBAAd,aACA,0BAAMA,UAAU,eAAhB,0B,yDCJG,SAASC,EAASC,GAAQ,IAC7BC,EAA+DD,EAA/DC,MAAOC,EAAwDF,EAAxDE,WAAYC,EAA4CH,EAA5CG,kBAAmBC,EAAyBJ,EAAzBI,qBAC9C,OACI,yBAAKN,UAAU,aAEPG,GAASA,EAAMI,KAAI,SAACC,EAAMC,GACtB,OACI,yBAAKC,QAAS,kBAAMJ,EAAqBG,IAAQE,IAAKH,EAAKI,GAAIZ,UAAWK,IAAsBI,EAAQ,cAAgB,QACpH,0BAAMT,UAAU,cAAcQ,EAAKK,MACnC,yBAAKb,UAAU,yBACX,0BAAMA,UAAU,eAAeQ,EAAKM,SAASC,SAEjD,4BAAQL,QAAS,kBAAMN,EAAWI,EAAKI,KAAKZ,UAAU,gBAAtD,e,YCCfgB,EAAkB,iBAAO,CAClCC,KCN6B,sBCH3BC,E,4MASFd,WAAa,SAACQ,IAEVR,EADuB,EAAKF,MAApBE,YACGQ,I,mEATO,IAAD,EAC6BO,KAAKjB,MAA3CC,EADS,EACTA,MAAOiB,EADE,EACFA,KAAMd,EADJ,EACIA,qBAEO,IADPH,EAAMkB,QAAO,SAACb,EAAMC,GAAP,OAAiBW,EAAKf,oBAAsBI,KAC7DM,QAAiC,IAAjBZ,EAAMY,QACnCT,EAAqBH,EAAMY,OAAS,K,+BASlC,IAAD,EACyCI,KAAKjB,MAA3CC,EADH,EACGA,MAAOiB,EADV,EACUA,KAAMd,EADhB,EACgBA,qBACrB,OACI,kBAAC,EAAD,CACIH,MAAOA,EACPC,WAAYe,KAAKf,WACjBC,kBAAmBe,EAAKf,kBACxBC,qBAAsBA,Q,GAtBNgB,aA2BjBC,eAAQ,SAACC,GAAD,MAAY,CAC/BrB,MAAOqB,EAAMrB,MACbiB,KAAMI,EAAMJ,QACZ,CACAhB,WC5BsB,SAACQ,GAAD,MAAS,CAC/BK,KFTuB,cEUvBL,OD0BYN,qBFjCoB,SAACG,GAAD,MAAY,CAC5CQ,KCF6B,oBDG7BQ,QAAShB,KE2BEc,CAKZL,GEnCUQ,G,OAAe,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUjB,EAAyB,EAAzBA,QAASV,EAAgB,EAAhBA,UAE9C,OACI,4BACIA,UAAS,wBAAmBA,GAC5BU,QAASA,GAAUiB,KCNlBC,G,OAAc,SAAC,GAAmE,IAAjEX,EAAgE,EAAhEA,KAAMY,EAA0D,EAA1DA,YAAaC,EAA6C,EAA7CA,SAAU9B,EAAmC,EAAnCA,UAAW+B,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAMzE,OACI,2BACIhC,UAAS,uBAAkBA,GAC3B8B,SAAUA,EACVb,KAAMA,EACNY,YAAaA,EACbE,MAAOA,EACPC,WAZR,SAAwBC,GACN,UAAVA,EAAEtB,KACFqB,SCAG,SAASE,EAAMhC,GAAQ,IAC1BiC,EAAiDjC,EAAjDiC,kBAAmBC,EAA8BlC,EAA9BkC,WAAYC,EAAkBnC,EAAlBmC,cACvC,OACI,yBAAKrC,UAAU,SACX,wBAAIA,UAAU,gBAAd,SACA,yBAAKA,UAAU,eACX,kBAAC,EAAD,CACI+B,MAAOK,EACPP,YAAY,oBACZ7B,UAAU,eACV8B,SAAUO,EACVL,WAAYG,IAEhB,kBAAC,EAAD,CACIzB,QAASyB,EACTnC,UAAU,iBAFd,YAOJ,kBAAC,EAAD,OC1BL,SAASsC,IACZ,OAAOC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,GAAKH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,G,ICM1FC,E,4MAEFC,OAAS,WAAO,IAAD,EACgD,EAAK1C,MAAxD2C,EADG,EACHA,WAAYC,EADT,EACSA,eAAwBC,EADjC,EACyB3B,KAAQ2B,SAC3B,KAAbA,IAEAF,EADWP,IACIS,GACfD,EAAe,M,EAIvBE,iBAAmB,SAACf,GAChB,EAAK/B,MAAM4C,eAAeb,EAAEgB,OAAOlB,Q,uDAG7B,IACEgB,EAAa5B,KAAKjB,MAAMkB,KAAxB2B,SACR,OACI,oCACI,kBAAC,EAAD,CACIZ,kBAAmBhB,KAAKyB,OACxBP,cAAelB,KAAK6B,iBACpBZ,WAAYW,S,GAtBHzB,aA4BdC,eAAQ,SAACC,GAAD,MAAY,CAC/BJ,KAAMI,EAAMJ,QACZ,CACAyB,WLlCsB,SAACjC,EAAIC,GAAL,MAAe,CACrCI,KFLuB,cEMvBL,KACAC,SK+BYiC,eRfc,SAACf,GAAD,MAAY,CACtCd,KCV4B,mBDW5BQ,QAASM,KQUER,CAIZoB,G,cCpCY,SAASO,EAAYhD,GAAQ,IACjCiD,EAAgBjD,EAAhBiD,aACP,OACI,oCAEQA,GAAgBA,EAAarC,UACzBqC,EAAarC,SAASP,KAAI,SAAA6C,GACtB,OACI,yBAAKzC,IAAKyC,EAAQxC,GAAIZ,UAAU,WAC5B,yBAAKqD,MAAO,CAAEC,gBAAiBF,EAAQG,OAASvD,UAAU,mBAC1D,0BAAMA,UAAU,iBAAiBoD,EAAQvC,WCT1D,SAAS2C,EAAStD,GAAQ,IAC7BiD,EAA4EjD,EAA5EiD,aAAczC,EAA8DR,EAA9DQ,QAASM,EAAqDd,EAArDc,gBAAiBoB,EAAoClC,EAApCkC,WAAYqB,EAAwBvD,EAAxBuD,aAAcF,EAAUrD,EAAVqD,MAC1E,OACI,yBAAKvD,UAAU,YACX,0BAAMA,UAAU,mBAAhB,mBAEqB0D,IAAjBP,GAA8B,0BAAMnD,UAAU,mBAAmBmD,EAAavC,IAGlF,kBAAC,EAAD,CAAauC,aAAcA,IAE3B,yBAAKnD,UAAU,0BACX,yBAAKU,QAASM,EAAiBhB,UAAU,8BACrC,yBAAKqD,MAAO,CAAEC,gBAAiBC,GAASvD,UAAU,sBAEtD,8BACI+B,MAAOK,EACPP,YAAY,uBACZ7B,UAAU,qBACVa,KAAK,WACLiB,SAAU2B,IAEd,kBAAC,EAAD,CAAc/C,QAASA,EAAUV,UAAU,oBAA3C,a,ICnBV2D,E,4MAEFF,aAAe,SAAAxB,IAEX2B,EAD4B,EAAK1D,MAA1B0D,mBACW3B,EAAEgB,OAAOlB,Q,EAG/B8B,gBAAkB,WAAO,IAAD,EACI,EAAK3D,MAArBC,EADY,EACZA,MACFE,EAFc,EACLe,KACgBf,kBAE/B,OADqBF,EAAMkB,QAAO,SAACb,EAAMC,GAAP,OAAiBA,IAAUJ,KACzC,I,EAGxByD,cAAgB,WAAO,IAAD,EACuE,EAAK5D,MAAtF4D,EADU,EACVA,cADU,IACK1C,KAAQ2C,EADb,EACaA,YAAaC,EAD1B,EAC0BA,cAAgB7D,EAD1C,EAC0CA,MAAOyD,EADjD,EACiDA,kBAEnE,GAAoB,KAAhBG,GAAuC,IAAjB5D,EAAMY,OAAc,CAC1C,IAAMoC,EAAe,EAAKU,kBACpBjD,EAAK0B,IACXwB,EAAcX,EAAavC,GAAIA,EAAImD,EAAaC,GAChDJ,EAAkB,M,uDAItB,IAAMT,EAAehC,KAAK0C,kBADrB,EAE6B1C,KAAKjB,MAA/Bc,EAFH,EAEGA,gBAAiBI,EAFpB,EAEoBA,KACzB,OACI,kBAAC,EAAD,CACI+B,aAAcA,EACdzC,QAASS,KAAK2C,cACd9C,gBAAiBA,EACjByC,aAActC,KAAKsC,aACnBF,MAAOnC,EAAK4C,cACZ5B,WAAYhB,EAAK2C,kB,GAlCDzC,aAyCjBC,eAAQ,SAACC,GAAD,MAAY,CAC/BrB,MAAOqB,EAAMrB,MACbiB,KAAMI,EAAMJ,QACZ,CAAE0C,cRnCuB,SAACG,EAASrD,EAAIC,EAAM0C,GAApB,MAA+B,CACxDtC,KFX0B,iBEY1BgD,UACArD,KACAC,OACA0C,UQ8BiBvC,kBAAiB4C,kBXvBL,SAAC7B,GAAD,MAAY,CACzCd,KCb+B,sBDc/BQ,QAASM,KWkBER,CAG4CoC,G,QCjDtCO,G,mNACjBC,GAAKC,SAASC,cAAc,O,kEAGxBD,SAASE,KAAKC,YAAYpD,KAAKgD,M,6CAI/BC,SAASE,KAAKE,YAAYrD,KAAKgD,M,+BAGzB,IACExC,EAAaR,KAAKjB,MAAlByB,SACR,OACI8C,IAASC,aAAa/C,EAAUR,KAAKgD,Q,GAdb7C,cCI9BqD,E,4MACFnD,MAAQ,CACJoD,WAAY,Q,EAGhBC,qBAAuB,SAACtB,GACpB,EAAKuB,SAAS,CAAEF,WAAYrB,EAAMwB,O,EAGtCC,OAAS,WAAO,IAAD,EACmC,EAAK9E,MAA3C+E,EADG,EACHA,iBAAkBC,EADf,EACeA,gBAE1BD,EADuB,EAAKzD,MAApBoD,YAERM,K,uDAGM,IAAD,EAC6B/D,KAAKjB,MAA/BgF,EADH,EACGA,gBAAiB9D,EADpB,EACoBA,KAEzB,OACI,kBAAC,EAAD,KACI,yBAAKpB,UAAWoB,EAAK+D,cAAgB,0BAA4B,0BAC7D,kBAAC,kBAAD,CACInF,UAAU,YACVuD,MAAOpC,KAAKK,MAAMoD,WAClBQ,iBAAkBjE,KAAK0D,qBACvBQ,SAAUlE,KAAK6D,OACfM,SAAUJ,U,GA3BNK,IAAMjE,WAmCnBC,eAAQ,SAACC,GAAD,MAAY,CAC/BJ,KAAMI,EAAMJ,QACZ,CACA6D,iBblC4B,SAAC1B,GAAD,MAAY,CACxCtC,KCH8B,qBDI9BQ,QAAS8B,IagCSvC,kBAAiBkE,gBbzBR,iBAAO,CAClCjE,KCR6B,uBY6BlBM,CAIZoD,GCxCY,SAASa,IACpB,OACI,6BAASxF,UAAU,QACf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OCMGyF,MAXf,WACE,OACE,yBAAKzF,UAAU,OACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,S,wBCAJ0F,EAAQC,eAAK,CACbC,UAAW,SAGVF,GAAUA,EAAMvF,OAAUuF,EAAMvF,MAAMY,SACvC2E,EAAQ,CACJvF,MAAO,KAIf,IAuCeA,EAvCD,WAOP,IAPQqB,EAOT,uDAPiBkE,EAAMvF,MAOvB,yCANFS,EAME,EANFA,GACAC,EAKE,EALFA,KACAI,EAIE,EAJFA,KACAsC,EAGE,EAHFA,MACAU,EAEE,EAFFA,QAGA,OAAQhD,GACJ,If7BmB,ce8Bf,MAAM,GAAN,mBACOO,GADP,CACc,CACNZ,KACAC,OACAC,SAAU,MAGtB,IfnCmB,ceoCf,OAAO,YAAIU,GAAOH,QAAO,SAACb,GAAD,OACrBA,EAAKI,KAAOA,KAGpB,IfpCsB,iBeqClB,IAAMiF,EAAa,CACfjF,KACAC,OACA0C,SAEJ,OAAO,YAAI/B,GAAOjB,KAAI,SAAAC,GAIlB,OAHIA,EAAKI,KAAOqD,IACZzD,EAAKM,SAAL,CAAiB+E,GAAjB,mBAAgCrF,EAAKM,YAElCN,KAEf,QACI,OAAOgB,I,OCrDbsE,EAAe,CACjBzF,kBAAmB,EACnB2D,cAAe,OACfmB,eAAe,EACfpC,SAAU,GACVgB,YAAa,ICCFgC,EAHKC,YAAgB,CAAC7F,QAAOiB,KDK7B,WAAyC,IAA/BI,EAA8B,uDAAtBsE,EAAcG,EAAQ,uCACnD,OAAQA,EAAOhF,MACX,IhBRyB,oBgBSrB,OAAO,2BACAO,GADP,IAEInB,kBAAmB4F,EAAOxE,UAElC,IhBT0B,qBgBUtB,OAAO,2BACAD,GADP,IAEIwC,cAAeiC,EAAOxE,UAE9B,IhBZyB,oBgBarB,OAAO,2BACAD,GADP,IAEI2D,eAAe,IAEvB,IhBfyB,oBgBgBrB,OAAO,2BACA3D,GADP,IAEI2D,eAAe,IAEvB,IhBlBwB,mBgBmBpB,OAAO,2BACA3D,GADP,IAEIuB,SAAUkD,EAAOxE,UAEzB,IhBrB2B,sBgBsBvB,OAAO,2BACJD,GADH,IAEIuC,YAAakC,EAAOxE,UAE5B,QACI,OAAOD,MEtCb0E,EAAa,CAACC,eAAK,CAAEP,UAAW,UAUvBQ,EARDC,YACVN,EACAO,YACIC,IAAe,WAAf,EAAmBL,GACnBM,OAAOC,8BAAgCD,OAAOC,iCCLtDhC,IAASiC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,QAGJhC,SAASwC,eAAe,U","file":"static/js/main.df4957fb.chunk.js","sourcesContent":["import React from 'react'\r\nimport './AsideSection.scss'\r\nexport default function AsideSection() {\r\n    return (\r\n        <aside className=\"aside\">\r\n            <h1 className=\"aside__title\">dayry app</h1>\r\n            <span className=\"aside__text\">Comment whit no sence</span>\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./ItemList.scss\"\r\nexport default function ItemList(props) {\r\n    const { items, deleteItem, selectedItemIndex, setSelectedItemIndex } = props;\r\n    return (\r\n        <div className=\"item-list\">\r\n            {\r\n                items && items.map((item, index) => {\r\n                    return (\r\n                        <div onClick={() => setSelectedItemIndex(index)} key={item.id} className={selectedItemIndex === index ? \"item active\" : \"item\"}>\r\n                            <span className=\"item__name\">{item.name}</span>\r\n                            <div className=\"item__count-container\">\r\n                                <span className=\"item__count\">{item.comments.length}</span>\r\n                            </div>\r\n                            <button onClick={() => deleteItem(item.id)} className=\"item__button\">Delete</button>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import {\r\n    SET_SELECTED_ITEM, SET_SELECTED_COLOR, SHOW_COLOR_PICKER, \r\n    HIDE_COLOR_PICKER, HANDLE_ITEM_TEXT, HANDLE_COMMENT_TEXT\r\n} from '../constants';\r\n\r\nexport const setSelectedItemIndex = (index) => ({\r\n    type: SET_SELECTED_ITEM,\r\n    payload: index,\r\n}); \r\n\r\nexport const setSelectedColor = (color) => ({\r\n    type: SET_SELECTED_COLOR,\r\n    payload: color\r\n});\r\n\r\nexport const showColorPicker = () => ({\r\n    type: SHOW_COLOR_PICKER\r\n});\r\n\r\nexport const hideColorPicker = () => ({\r\n    type: HIDE_COLOR_PICKER\r\n});\r\n\r\nexport const handleItemText = (value) => ({\r\n    type: HANDLE_ITEM_TEXT,\r\n    payload: value \r\n});\r\n\r\nexport const handleCommentText = (value) => ({\r\n    type: HANDLE_COMMENT_TEXT,\r\n    payload: value \r\n});\r\n\r\n\r\n","export const CREATE_ITEM = 'CREATE_ITEM';\r\n\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\n\r\nexport const SET_SELECTED_ITEM = 'SET_SELECTED_ITEM';\r\n\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\r\n\r\nexport const SET_SELECTED_COLOR = 'SET_SELECTED_COLOR';\r\n\r\nexport const SHOW_COLOR_PICKER = 'SHOW_COLOR_PICKER';\r\n\r\nexport const HIDE_COLOR_PICKER = 'HIDE_COLOR_PICKER';\r\n\r\nexport const HANDLE_ITEM_TEXT = 'HANDLE_ITEM_TEXT';\r\n\r\nexport const HANDLE_COMMENT_TEXT = 'HANDLE_COMMENT_TEXT';\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ItemList from './ItemList'\r\nimport { connect } from 'react-redux';\r\nimport { deleteItem } from '../../store/actions/itemsActionCreator';\r\nimport { setSelectedItemIndex } from '../../store/actions/mainActionCreator';\r\n\r\n\r\nclass ItemListContainer extends Component {\r\n\r\n    componentDidUpdate() {\r\n        const { items, main, setSelectedItemIndex } = this.props;\r\n        const selectedItem = items.filter((item, index) => main.selectedItemIndex === index);\r\n        if (selectedItem.length === 0 && items.length !== 0) {\r\n            setSelectedItemIndex(items.length - 1);\r\n        }\r\n    }\r\n    deleteItem = (id) => {\r\n        const { deleteItem } = this.props;\r\n        deleteItem(id);\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { items, main, setSelectedItemIndex } = this.props;\r\n        return (\r\n            <ItemList\r\n                items={items}\r\n                deleteItem={this.deleteItem}\r\n                selectedItemIndex={main.selectedItemIndex}\r\n                setSelectedItemIndex={setSelectedItemIndex}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default connect((state) => ({\r\n    items: state.items,\r\n    main: state.main\r\n}), {\r\n    deleteItem, setSelectedItemIndex\r\n})(ItemListContainer);","import {\r\n    CREATE_ITEM, DELETE_ITEM, CREATE_COMMENT\r\n} from '../constants';\r\n\r\nexport const createItem = (id, name) => ({\r\n    type: CREATE_ITEM,\r\n    id,\r\n    name,\r\n}); \r\n\r\nexport const deleteItem = (id) => ({\r\n    type: DELETE_ITEM,\r\n    id,\r\n});\r\n\r\n\r\nexport const createComment = (item_id, id, name, color) => ({\r\n    type: CREATE_COMMENT,\r\n    item_id,\r\n    id,\r\n    name,\r\n    color\r\n});","\r\nimport React from 'react'\r\nimport './CustomButton.scss'\r\n\r\nexport const CustomButton = ({ children, onClick, className }) => {\r\n\r\n    return (\r\n        <button\r\n            className={`custom-button ${className}`}\r\n            onClick={onClick}>{children}\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './CustomInput.scss'\r\n\r\nexport const CustomInput = ({ type, placeholder, onChange, className, value, onKeyPress }) => {\r\n    function handleKeyPress(e) {\r\n        if (e.key === 'Enter') {\r\n            onKeyPress();\r\n        }\r\n    }\r\n    return (\r\n        <input\r\n            className={`custom-input ${className}`}\r\n            onChange={onChange}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            value={value}\r\n            onKeyPress={handleKeyPress}\r\n        />\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './Items.scss';\r\nimport ItemListContainer from '../ItemList/ItemListContainer';\r\nimport { CustomButton } from '../CustomButton/CustomButton';\r\nimport  {CustomInput}  from '../CustomInput/CustomInput';\r\n\r\nexport default function Items(props) {\r\n    const { onClickFormButton, inputValue, onChangeInput } = props;\r\n    return (\r\n        <div className=\"items\">\r\n            <h2 className=\"items__title\">Items</h2>\r\n            <div className=\"items__form\">\r\n                <CustomInput\r\n                    value={inputValue}\r\n                    placeholder=\"Type name here...\"\r\n                    className=\"items__input\"\r\n                    onChange={onChangeInput}\r\n                    onKeyPress={onClickFormButton}\r\n                />\r\n                <CustomButton\r\n                    onClick={onClickFormButton}\r\n                    className=\"items__button\"\r\n                >\r\n                    Add new\r\n                </CustomButton>\r\n            </div>\r\n            <ItemListContainer />\r\n        </div>\r\n    )\r\n}\r\n","export function getRandonId() {\r\n    return Math.random().toString(36).substring(2, 8) + Math.random().toString(36).substring(2, 8);\r\n}","import React, { Component } from 'react'\r\nimport Items from './Items'\r\nimport { connect } from 'react-redux';\r\nimport { createItem } from '../../store/actions/itemsActionCreator';\r\nimport { handleItemText } from '../../store/actions/mainActionCreator';\r\nimport { getRandonId } from '../../functions'\r\n\r\nclass ItemsContainer extends Component {\r\n\r\n    create = () => {\r\n        const { createItem, handleItemText, main: { itemText } } = this.props;\r\n        if (itemText !== \"\") {\r\n            const id = getRandonId();\r\n            createItem(id, itemText);\r\n            handleItemText('');\r\n        }\r\n    }\r\n\r\n    onChangeItemText = (e) => {\r\n        this.props.handleItemText(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        const { itemText } = this.props.main;\r\n        return (\r\n            <>\r\n                <Items\r\n                    onClickFormButton={this.create}\r\n                    onChangeInput={this.onChangeItemText}\r\n                    inputValue={itemText}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default connect((state) => ({\r\n    main: state.main\r\n}), {\r\n    createItem, handleItemText\r\n})(ItemsContainer);","import React from 'react'\r\nimport './CommentList.scss'\r\n\r\nexport default function CommentList(props) {\r\n    const {selectedItem} = props;\r\n    return (\r\n        <>\r\n            {\r\n                selectedItem && selectedItem.comments && (\r\n                    selectedItem.comments.map(comment => {\r\n                        return (\r\n                            <div key={comment.id} className=\"comment\">\r\n                                <div style={{ backgroundColor: comment.color }} className=\"comment__color\" />\r\n                                <span className=\"comment__text\">{comment.name}</span>\r\n                            </div>\r\n                        )\r\n                    })\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./Comments.scss\"\r\nimport { CustomButton } from '../CustomButton/CustomButton';\r\nimport CommentList from '../CommentList/CommentList';\r\nexport default function Comments(props) {\r\n    const { selectedItem, onClick, showColorPicker, inputValue, onChangeText, color } = props;\r\n    return (\r\n        <div className=\"comments\">\r\n            <span className=\"comments__title\">Comments #</span>\r\n            {\r\n                selectedItem !== undefined && <span className=\"comments__title\">{selectedItem.id}</span>\r\n            }\r\n            \r\n            <CommentList selectedItem={selectedItem} />\r\n            \r\n            <div className=\"comments__form-wrapper\">\r\n                <div onClick={showColorPicker} className=\"comments__square-container\">\r\n                    <div style={{ backgroundColor: color }} className=\"comments__square\" />\r\n                </div>\r\n                <textarea\r\n                    value={inputValue}\r\n                    placeholder=\"Type comment here...\"\r\n                    className=\"comments__textarea\"\r\n                    name=\"comments\"\r\n                    onChange={onChangeText}\r\n                />\r\n                <CustomButton onClick={onClick}  className=\"comments__button\">Add new</CustomButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Comments from './Comments'\r\nimport { connect } from 'react-redux';\r\nimport { createComment } from '../../store/actions/itemsActionCreator';\r\nimport { showColorPicker, handleCommentText } from '../../store/actions/mainActionCreator';\r\nimport {getRandonId} from '../../functions.js'\r\n\r\nclass CommentsContainer extends Component {\r\n\r\n    onChangeText = e => {\r\n        const {handleCommentText} = this.props;\r\n        handleCommentText(e.target.value);\r\n    }\r\n\r\n    getSelectedItem = () => {\r\n        const { items, main } = this.props;\r\n        const selectedItemIndex = main.selectedItemIndex;\r\n        const selectedItem = items.filter((item, index) => index === selectedItemIndex);\r\n        return selectedItem[0];\r\n    }\r\n\r\n    createComment = () => {\r\n        const { createComment, main : {commentText, selectedColor}, items, handleCommentText } = this.props;\r\n        \r\n        if (commentText !== \"\" && items.length !== 0) {\r\n            const selectedItem = this.getSelectedItem();\r\n            const id = getRandonId();\r\n            createComment(selectedItem.id, id, commentText, selectedColor);\r\n            handleCommentText(\"\");\r\n        }\r\n    }\r\n    render() {\r\n        const selectedItem = this.getSelectedItem();\r\n        const { showColorPicker, main } = this.props;\r\n        return (\r\n            <Comments\r\n                selectedItem={selectedItem}\r\n                onClick={this.createComment}\r\n                showColorPicker={showColorPicker}\r\n                onChangeText={this.onChangeText}\r\n                color={main.selectedColor}\r\n                inputValue={main.commentText}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect((state) => ({\r\n    items: state.items,\r\n    main: state.main\r\n}), { createComment, showColorPicker, handleCommentText })(CommentsContainer);\r\n","import  { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nexport default class Portal extends Component {\r\n    el = document.createElement('div');\r\n\r\n    componentDidMount() {\r\n        document.body.appendChild(this.el);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n        return (\r\n            ReactDOM.createPortal(children, this.el)\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { PhotoshopPicker } from 'react-color';\r\nimport './MyColorPicker.scss'\r\nimport { connect } from 'react-redux';\r\nimport { setSelectedColor, showColorPicker, hideColorPicker } from '../../store/actions/mainActionCreator';\r\nimport Portal from '../Portal';\r\nclass MyColorPicker extends React.Component {\r\n    state = {\r\n        background: '#000',\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex });\r\n    };\r\n\r\n    accept = () => {\r\n        const { setSelectedColor, hideColorPicker } = this.props;\r\n        const { background } = this.state;\r\n        setSelectedColor(background);\r\n        hideColorPicker();\r\n    }\r\n\r\n    render() {\r\n        const { hideColorPicker, main } = this.props;\r\n\r\n        return (\r\n            <Portal>\r\n                <div className={main.isColorPicker ? \"my-color-picker visible\" : \"my-color-picker hidden\"}>\r\n                    <PhotoshopPicker\r\n                        className=\"my-picker\"\r\n                        color={this.state.background}\r\n                        onChangeComplete={this.handleChangeComplete}\r\n                        onAccept={this.accept}\r\n                        onCancel={hideColorPicker}\r\n                    />\r\n                </div>\r\n            </Portal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect((state) => ({\r\n    main: state.main\r\n}), {\r\n    setSelectedColor, showColorPicker, hideColorPicker\r\n})(MyColorPicker);","import React from 'react'\r\nimport './MainSection.scss'\r\nimport ItemsContainer from '../Items/ItemsContainer'\r\nimport CommentsContainer from '../Comments/CommentsContainer'\r\nimport MyColorPicker from '../MyColorPicker/MyColorPicker'\r\nexport default function MainSection() {\r\n    return (\r\n        <section className=\"main\">\r\n            <ItemsContainer />\r\n            <CommentsContainer />\r\n            <MyColorPicker />\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport AsideSection from './components/AsideSection/AsideSection';\nimport MainSection from './components/MainSection/MainSection';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <AsideSection />\n        <MainSection />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import {\r\n    CREATE_ITEM,\r\n    DELETE_ITEM,\r\n    CREATE_COMMENT,\r\n\r\n} from '../constants';\r\nimport {\r\n    load\r\n} from 'redux-localstorage-simple';\r\n\r\nlet ITEMS = load({\r\n    namespace: 'todo'\r\n});\r\n\r\nif (!ITEMS || !ITEMS.items || !ITEMS.items.length) {\r\n    ITEMS = {\r\n        items: [],\r\n    }\r\n}\r\n\r\nconst items = (state = ITEMS.items, {\r\n    id,\r\n    name,\r\n    type,\r\n    color,\r\n    item_id\r\n\r\n}) => {\r\n    switch (type) {\r\n        case CREATE_ITEM:\r\n            return [\r\n                ...state, {\r\n                    id,\r\n                    name,\r\n                    comments: [],\r\n                }\r\n            ];\r\n        case DELETE_ITEM:\r\n            return [...state].filter((item) =>\r\n                item.id !== id\r\n            );\r\n\r\n        case CREATE_COMMENT:\r\n            const newComment = {\r\n                id,\r\n                name,\r\n                color\r\n            }\r\n            return [...state].map(item => {\r\n                if (item.id === item_id) {\r\n                    item.comments = [newComment, ...item.comments];\r\n                }\r\n                return item;\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default items;","import { SET_SELECTED_ITEM, SET_SELECTED_COLOR, SHOW_COLOR_PICKER, HIDE_COLOR_PICKER, HANDLE_ITEM_TEXT, HANDLE_COMMENT_TEXT } from '../constants';\r\n\r\nconst initialState = {\r\n    selectedItemIndex: 0,\r\n    selectedColor: \"#000\",\r\n    isColorPicker: false,\r\n    itemText: '',\r\n    commentText: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_SELECTED_ITEM:\r\n            return {\r\n                ...state,\r\n                selectedItemIndex: action.payload\r\n            }\r\n        case SET_SELECTED_COLOR:\r\n            return {\r\n                ...state,\r\n                selectedColor: action.payload\r\n            }\r\n        case SHOW_COLOR_PICKER:\r\n            return {\r\n                ...state,\r\n                isColorPicker: true\r\n            }\r\n        case HIDE_COLOR_PICKER:\r\n            return {\r\n                ...state,\r\n                isColorPicker: false\r\n            }\r\n        case HANDLE_ITEM_TEXT:\r\n            return {\r\n                ...state,\r\n                itemText: action.payload\r\n            }\r\n        case HANDLE_COMMENT_TEXT:\r\n            return {\r\n            ...state,\r\n                commentText: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport items from './items';\r\nimport main from './main';\r\n\r\n\r\nconst rootReducer = combineReducers({items, main});\r\n\r\n\r\nexport default rootReducer;","\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport { save } from 'redux-localstorage-simple';\r\n\r\nconst middleware = [save({ namespace: 'todo'})];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './store/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}